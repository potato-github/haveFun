

5 二进制与汇编语言的关系

    CPU中存放了一部分指令和数据，另一部分存在内存中，绝大部分在内存条中(内存条是内存的一部分)
    指令和数据在内存中没有任何区分

    数据先读取到CPU中，经过处理后，再写入内存(memory)

    CPU和内存条之间通过电路进行联系
    这些电路表示：地址线(内存编号)、数据线(数据信息)、控制线(读写信息)
    1、地址线
        地址线的数量，决定了寻址能力
        内存编号为什么从0开始？    物理上的限制，电路只能表示0和1
        eg:
            10根地址线，可以表示0000000000~1111111111，也就是0~1023
    2、数据线
        数据线的数量，决定了CPU和其他部件进行数据传输时，一次性能够传送多少数据
        eg:
            ff是1111*1111,为1byte(8bit),8根数据线，可以一次性全部传输
            *数据线的数量/8，为一次性可传递的字节数
    3、控制线
        控制线的数量，决定了CPU对其他部件进行控制的能力

    question：
        8086，80386的数据总线宽度分别为16根，32根，则它们依次可以传递的数据为：2B，4B
        从内存中读取1024字节的数据，8086至少要读512次，80386至少要读256次

    e B800:400 是显存地址
    RAM内存：允许读取和写入，断电时，数据和指令丢失
    ROM内存：只允许读取，断电时，数据和指令还在，一般用于启动计算机时

    GPU：图形处理工具


6 寄存器

    AX,BX,CX,DX为通用寄存器，用于存入数据的数据寄存器，16位寄存器
    它们的容量是2byte，0~FFFFH，0~65535
    它们各自可以分割为2个8位寄存器
    eg：
        AX = AH + AL AX的高8位构成AH寄存器，低8位构成AL寄存器

    8086CPU，可以兼容8位寄存器的程序
    CPU从内存中读取一个字节8bit字节型数据，存入8位寄存器
    8086CPU一次性可以处理2种尺寸的数据
    字节型数据  1byte = 8bit - 8位寄存器中
    字型数据    2byte = 16bit - 16位寄存器中
        其中，一个字节是这个字型数据的高位字节，一个是低位字节

    mov指令，赋值。在使用时，要保证数据与寄存器之间的位数一致性
    eg:
        mov ax,5 ==> mov ax 0005 ==> ax = 0005
        mov ax,0 ==> mov ax 0000 ==> ax = 0000
        mov al,5 ==> mov al 05   ==> ax = 0005

        mov ax,4E20H ==> ax = 4E20
        mov bx,ax ==> bx = 4E20
        mov ch,bl ==> cx = 2000
        mov cl,bh ==> cx = 204E
        mov dl,ch ==> dx = 0020
        mov ax,dx ==> ax = 0020

        mov ax,bl ==> error
        mov bh,ax ==> error
        mov al,100H ==> error
        mov ax,10000H ==> error
        mov al,0005H ==> error

    add指令，加法
        mov ax,18H ==> ax = 0018
        mov ah,78H ==> ax = 7818
        mov ax,8 ==> ax = 7820

        mov ax,0 ==> ax = 0000
        mov ax,93H ==> ax = 0093
        add al,85H ==> ax = 0018      计算结果是118，但在8位寄存器中，只能存18，1存在了其它地方

        mov ax,0 ==> ax = 0000
        mov al,93H ==> ax = 0093
        add ax,85H ==> ax = 0118

    寄存器是互相独立的





















